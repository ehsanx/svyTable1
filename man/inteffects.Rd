% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inteffects.R
\name{inteffects}
\alias{inteffects}
\title{Calculate Simple (Stratum-Specific) Effects from a Joint Variable Model}
\usage{
inteffects(
  joint_model,
  joint_var_name,
  factor1_name,
  factor2_name,
  factor1_levels,
  factor2_levels,
  level_separator = ".",
  scale = c("ratio", "log"),
  digits = 2,
  conf.level = 0.95
)
}
\arguments{
\item{joint_model}{A fitted model object (e.g., `svycoxph`, `svyglm`) that
used a combined joint variable (e.g., `~ A_B`).}

\item{joint_var_name}{Character string. The name of the joint variable as
used in the model formula (e.g., `"Race1_ObeseStatus"`).}

\item{factor1_name}{Character string. The name of the *first* logical factor
used to create the joint variable (e.g., `"Race1"`). Used for naming output rows.}

\item{factor2_name}{Character string. The name of the *second* logical factor
used to create the joint variable (e.g., `"ObeseStatus"`). Used for naming output rows.}

\item{factor1_levels}{Character vector. All levels of the *first* logical factor,
with the reference level *first*.}

\item{factor2_levels}{Character vector. All levels of the *second* logical factor,
with the reference level *first*.}

\item{level_separator}{Character string. The separator used to create the
joint level names (e.g., `"_"` or `"."`).
Default is `"."` (the R default for `interaction()`).}

\item{scale}{Character string. The scale for the output estimates, CIs, and SE.
Options are `"ratio"` (default, e.g., OR/HR) or `"log"` (log-OR/log-HR).}

\item{digits}{Integer. Number of decimal places for rounding estimates, SE,
and CIs when `scale = "ratio"`. Default is 2. (Set to NULL for no rounding).}

\item{conf.level}{Confidence level for the interval (default 0.95).}
}
\value{
A `tibble` (data frame) with columns:
\itemize{
  \item `Comparison`: A description of the simple effect, styled similarly
    to the `Publish` package (e.g., "ObeseStatus(Obese vs Not Obese): Race1(White)").
  \item `Estimate`: The point estimate on the specified `scale`.
  \item `SE`: The standard error on the specified `scale`. Calculated using the
    delta method for `scale = "ratio"`.
  \item `CI.low`: The lower bound of the confidence interval (on the specified `scale`).
  \item `CI.upp`: The upper bound of the confidence interval (on the specified `scale`).
  \item `p_value`: The p-value for the simple effect (tests H0: logEstimate=0 or Estimate=1).
}
}
\description{
Replicates the output of an interaction-term model (e.g., simple effects
from `publish()` or `emmeans`) by calculating all stratum-specific
comparisons from a joint-variable model. Allows output on log or ratio scale
with consistent column structure, including scale-appropriate standard errors.
}
\examples{
\donttest{
# --- Load required libraries for the example ---
if (requireNamespace("survey", quietly = TRUE) &&
    requireNamespace("NHANES", quietly = TRUE) &&
    requireNamespace("dplyr", quietly = TRUE) &&
    requireNamespace("tidyr", quietly = TRUE) &&
    requireNamespace("msm", quietly = TRUE)) { # msm needed for SE calculation

  library(survey)
  library(NHANES)
  library(dplyr)
  library(tidyr)
  library(msm) # Load msm

  # --- 1. Data Preparation (NHANES Example) ---
  data(NHANESraw)

  vars_needed <- c("Age", "Race1", "BPSysAve", "BMI", "ObeseStatus", "Hypertension_130",
                   "SDMVPSU", "SDMVSTRA", "WTMEC2YR")

  nhanes_adults_processed <- NHANESraw \%>\%
    filter(Age >= 20) \%>\%
    mutate(
      ObeseStatus = factor(ifelse(BMI >= 30, "Obese", "Not Obese"),
                           levels = c("Not Obese", "Obese")),
      Hypertension_130 = factor(ifelse(BPSysAve >= 130, "Yes", "No"),
                                levels = c("No", "Yes")),
      Race1 = relevel(as.factor(Race1), ref = "White")
    ) \%>\%
    select(all_of(vars_needed)) \%>\%
    drop_na()

  adult_design_binary <- svydesign(
    id = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR,
    nest = TRUE, data = nhanes_adults_processed
  )

  # --- 2. Create Joint Variable and Fit Joint Model ---
  adult_design_binary <- update(adult_design_binary,
    Race1_ObeseStatus = interaction(Race1, ObeseStatus, sep = "_", drop = TRUE)
  )
  adult_design_binary <- update(adult_design_binary,
    Race1_ObeseStatus = relevel(Race1_ObeseStatus, ref = "White_Not Obese")
  )

  joint_model_logit <- svyglm(
    Hypertension_130 ~ Race1_ObeseStatus + Age,
    design = adult_design_binary, family = quasibinomial()
  )

  # --- 3. Run the function ---
  f1_levels <- levels(adult_design_binary$variables$Race1)
  f2_levels <- levels(adult_design_binary$variables$ObeseStatus)

  # --- Example 1: Output on Ratio scale ---
  simple_effects_ratio <- inteffects(
    joint_model = joint_model_logit,
    joint_var_name = "Race1_ObeseStatus",
    factor1_name = "Race1",
    factor2_name = "ObeseStatus",
    factor1_levels = f1_levels,
    factor2_levels = f2_levels,
    level_separator = "_",
    scale = "ratio"
  )
  print("--- Output on Ratio Scale ---")
  print(simple_effects_ratio, n = 50)

  # --- Example 2: Output on Log scale ---
  simple_effects_log <- inteffects(
    joint_model = joint_model_logit,
    joint_var_name = "Race1_ObeseStatus",
    factor1_name = "Race1",
    factor2_name = "ObeseStatus",
    factor1_levels = f1_levels,
    factor2_levels = f2_levels,
    level_separator = "_",
    scale = "log"
  )
  print("--- Output on Log Scale ---")
  print(simple_effects_log, n = 50)
}
}
}
