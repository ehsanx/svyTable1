% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addintlist.R
\name{addintlist}
\alias{addintlist}
\title{Calculate All Additive Interaction Measures from an Interaction Model}
\usage{
addintlist(
  model,
  factor1_name,
  factor2_name,
  measures = "all",
  conf.level = 0.95,
  digits = 3
)
}
\arguments{
\item{model}{A fitted model object (e.g., `svycoxph`, `svyglm`) of type
`"interaction"` (containing a `factor1 * factor2` term).}

\item{factor1_name}{Character string: The name of the first factor variable
in the interaction (e.g., `"Race1"`).}

\item{factor2_name}{Character string: The name of the second factor variable
(e.g., `"ObeseStatus"`).}

\item{measures}{A character vector specifying which measures to calculate via `addint()`.
Options: `"RERI"`, `"AP"`, `"S"`, or `"all"`. Default is `"all"`.}

\item{conf.level}{Confidence level for the interval (default 0.95).}

\item{digits}{Integer. Number of decimal places for rounding estimates and
CIs in the final table. Default is 3. (Set to NULL for no rounding).}
}
\value{
A `tibble` (data frame) summarizing the additive interaction results.
  Columns include:
  \itemize{
    \item `Factor1`: Name of the first factor.
    \item `Level1`: Non-reference level of the first factor for the comparison.
    \item `Factor2`: Name of the second factor.
    \item `Level2`: Non-reference level of the second factor for the comparison.
    \item `Measure`: The additive interaction measure calculated ("RERI", "AP", or "S").
    \item `Estimate`: Point estimate of the measure.
    \item `SE`: Standard Error (Note: For S, this is SE of log(S)).
    \item `CI_low`: Lower confidence interval bound.
    \item `CI_upp`: Upper confidence interval bound.
  }
  Returns an empty tibble if errors occur.
}
\description{
Automatically identifies interaction terms in a fitted model involving two
categorical factors (e.g., `~ A * B`) and calculates measures of additive
interaction (RERI, AP, S) for each combination of non-reference levels.
This function requires the `addint()` function to be available.
}
\details{
This function serves as a wrapper around `addint()`. It determines the
levels of the two specified factors from the model object, constructs the
expected coefficient names for main effects and interaction terms (checking
both `A:B` and `B:A` formats), and then calls `addint()` with
`type = "interaction"` for each valid combination found in the model.
The results are compiled into a single summary table.
}
\examples{
\donttest{
# --- Load required libraries for the example ---
# Ensure the 'addint' function is defined or loaded from the package
# source("R/addint.R") # If running interactively before package build

if (requireNamespace("survey", quietly = TRUE) &&
    requireNamespace("NHANES", quietly = TRUE) &&
    requireNamespace("dplyr", quietly = TRUE) &&
    requireNamespace("tidyr", quietly = TRUE) &&
    requireNamespace("msm", quietly = TRUE)) {

  library(survey)
  library(NHANES)
  library(dplyr)
  library(tidyr)
  library(msm)

  # --- 1. Data Preparation (NHANES Example) ---
  data(NHANESraw)

  vars_needed <- c("Age", "Race1", "BPSysAve", "BMI", "ObeseStatus", "Hypertension_130",
                   "SDMVPSU", "SDMVSTRA", "WTMEC2YR")

  nhanes_adults_processed <- NHANESraw \%>\%
    filter(Age >= 20) \%>\%
    mutate(
      ObeseStatus = factor(ifelse(BMI >= 30, "Obese", "Not Obese"),
                           levels = c("Not Obese", "Obese")),
      Hypertension_130 = factor(ifelse(BPSysAve >= 130, "Yes", "No"),
                                levels = c("No", "Yes")),
      Race1 = relevel(as.factor(Race1), ref = "White")
    ) \%>\%
    select(all_of(vars_needed)) \%>\%
    drop_na()

  adult_design_binary <- svydesign(
    id = ~SDMVPSU, strata = ~SDMVSTRA, weights = ~WTMEC2YR,
    nest = TRUE, data = nhanes_adults_processed
  )

  # --- 2. Fit Interaction Term Model ---
  interaction_model_logit <- svyglm(
    Hypertension_130 ~ Race1 * ObeseStatus + Age,
    design = adult_design_binary, family = quasibinomial()
  )

  # --- 3. Calculate all additive interactions ---
  all_interactions_table <- addintlist(
    model = interaction_model_logit,
    factor1_name = "Race1",
    factor2_name = "ObeseStatus",
    measures = "all"
  )

  # Print the results table
  print(all_interactions_table, n=50)

} else {
  print("Required packages (survey, NHANES, dplyr, tidyr, msm) not found.")
}
}
}
\seealso{
\code{\link{addint}}
}
